{"version":3,"sources":["components/WelcomeScreen/WelcomeScreen.jsx","pages/WelcomePage.jsx","components/CityInfo/CityInfo.jsx","components/IconState/IconState.jsx","components/Weather/Weather.jsx","components/CityList/CityList.jsx","components/AppFrame/AppFrame.jsx","pages/MainPage.jsx","components/WeatherDetails/WeatherDetails.jsx","components/ForecastItem/ForecastItem.jsx","components/Forecast/Forecast.jsx","components/ForecastChart/ForecastChart.jsx","pages/CityPage.jsx","pages/NotFoundPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["WelcomeScreen","children","myRefDiv","useRef","useState","vanta","setVanta","useEffect","Clouds","THREE","el","current","destroy","console","log","ref","className","WelcomePage","Grid","container","direction","justifyContent","alignItems","item","xs","Provider","value","size","Typography","variant","color","Link","component","RouterLink","to","CityInfo","city","country","display","stateByname","cloud","WiCloud","cloudy","WiDayCloudy","fog","WiDayFog","sunny","WiDaySunny","rain","WiRain","IconState","state","StateByname","Weather","temperature","spacing","CityList","cities","onClickCity","List","map","cityAndCountry","eventOnClickCity","ListItem","button","onClick","md","AppFrame","AppBar","position","Toolbar","LinkRouter","IconButton","sm","lg","MainPage","history","useHistory","push","WeatherDetails","humidity","wind","ForecastItem","weekDay","hour","justify","Forecast","forecastItemList","forecast","renderForecastItem","ForecastChart","data","ResponsiveContainer","height","width","LineChart","margin","top","bottom","left","right","XAxis","dataKey","YAxis","CartesianGrid","Tooltip","Legend","Line","type","stroke","dataExample","forecastItemListExample","CityPage","NotFoundPage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4f866ca.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Clouds from 'vanta/dist/vanta.clouds.min'\r\nimport * as THREE from 'three'\r\n\r\nconst WelcomeScreen = ({ children }) => {\r\n\r\n    const myRefDiv = useRef(null)\r\n    const [vanta, setVanta] = useState(0)\r\n\r\n    useEffect(() => {\r\n        \r\n        if (!vanta) {\r\n            setVanta(Clouds({\r\n                THREE,\r\n                el: myRefDiv.current\r\n            }))\r\n        }\r\n\r\n        return () => {\r\n            // Dentro de esta funcion se va a realizar la tarea de destruir los recursos tomados por \"vanta\"\r\n            if (vanta) {\r\n                vanta.destroy()\r\n                console.log(\"Desmonto Componente Vanta\");\r\n            }\r\n        }\r\n    }, [vanta])\r\n\r\n    return (\r\n        <div ref={myRefDiv} className=\"full\">\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nWelcomeScreen.propTypes = {\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default WelcomeScreen\r\n","import React from 'react'\r\nimport WelcomeScreen from '../components/WelcomeScreen'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { Grid, Typography, Link } from '@material-ui/core'\r\nimport { IconContext } from 'react-icons'\r\nimport { WiDaySunny } from 'react-icons/wi'\r\n\r\nconst WelcomePage = () => {\r\n    return (\r\n        <WelcomeScreen>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" className=\"full\">\r\n                <Grid item container justifyContent=\"center\" alignItems=\"center\" className=\"highlight\">\r\n                    <Grid item container xs={12} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <IconContext.Provider value={{size: \"6em\"}}>\r\n                                <WiDaySunny />\r\n                            </IconContext.Provider>\r\n                        </Grid>\r\n                        <Grid item container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n                            <Typography variant=\"h4\" color=\"inherit\">\r\n                                Weather App\r\n                            </Typography>\r\n                            <Link color=\"inherit\" aria-label=\"menu\" component={RouterLink} to=\"/main\">\r\n                                Ingresar\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </WelcomeScreen>\r\n    )\r\n}\r\n\r\nexport default WelcomePage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst CityInfo = ({ city, country }) => {\r\n    return (\r\n        <>\r\n            <Typography display=\"inline\" variant=\"h4\">{city}, </Typography>\r\n            <Typography display=\"inline\" variant=\"h6\">{country}</Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nCityInfo.propTypes = {\r\n    city: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default CityInfo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { WiCloud, WiDayCloudy, WiDayFog, WiDaySunny, WiRain } from 'react-icons/wi'\r\n\r\nexport const validValues = [\"cloud\", \"cloudy\", \"fog\", \"sunny\", \"rain\"]\r\n\r\nconst stateByname = {\r\n    cloud: WiCloud,\r\n    cloudy: WiDayCloudy,\r\n    fog: WiDayFog,\r\n    sunny: WiDaySunny,\r\n    rain:WiRain\r\n}\r\n\r\nconst IconState = ({ state }) => {\r\n    const StateByname = stateByname[state]\r\n    return (\r\n        <StateByname />\r\n    )\r\n}\r\n\r\nIconState.propTypes = {\r\n    state: PropTypes.oneOf(validValues).isRequired\r\n}\r\n\r\nexport default IconState\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { IconContext } from 'react-icons/lib'\r\nimport IconState, { validValues } from './../IconState'\r\n\r\nconst Weather = ({ temperature, state }) => {\r\n    return (\r\n        <Grid container item direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\r\n            <IconContext.Provider value={{ size: '6em' }}>\r\n                <IconState state={state} />\r\n            </IconContext.Provider>\r\n            <Typography display=\"inline\" variant=\"h2\"> {temperature} </Typography>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nWeather.propTypes = {\r\n    temperature: PropTypes.number.isRequired,\r\n    state: PropTypes.oneOf(validValues).isRequired\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, List, ListItem } from '@material-ui/core'\r\nimport CityInfo from './../CityInfo'\r\nimport Weather from './../Weather'\r\n\r\n//renderCityAndCountry es una funcion que retorna otra funcion\r\nconst renderCityAndCountry = eventOnClickCity => cityAndCountry => {\r\n    const { city, country } = cityAndCountry\r\n    return (\r\n        <ListItem button \r\n                key={city} onClick={eventOnClickCity}>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item md={9} xs={12}>\r\n                    <CityInfo city={city} country={country} />\r\n                </Grid>\r\n                <Grid item md={3} xs={12}>\r\n                    <Weather temperature={10} state=\"sunny\" />\r\n                </Grid>\r\n            </Grid>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nconst CityList = ({ cities, onClickCity }) => {\r\n    return (\r\n        <List>\r\n            {\r\n                cities.map(cityAndCountry => renderCityAndCountry(onClickCity)(cityAndCountry))\r\n            }\r\n        </List>\r\n    )\r\n}\r\n\r\nCityList.propTypes = {\r\n    cities: PropTypes.shape({\r\n        city: PropTypes.string.isRequired,\r\n        country: PropTypes.string.isRequired,\r\n    }),\r\n    onClickCity: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CityList\r\n","import React, { Children } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, AppBar, Toolbar, IconButton, Link, Typography } from '@material-ui/core'\r\nimport { IconContext } from 'react-icons'\r\nimport { WiDaySunny } from 'react-icons/wi'\r\nimport { Link as LinkRouter } from 'react-router-dom'\r\n\r\nconst AppFrame = ({ children }) => {\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar variant=\"dense\">\r\n                    <Link to=\"/main\" component={LinkRouter} color=\"inherit\" aria-label=\"menu\">\r\n                        <Grid item container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                            <IconButton color=\"inherit\" aria-label=\"menu\">\r\n                                <IconContext.Provider value={{ size: \"2em\" }}>\r\n                                    <WiDaySunny></WiDaySunny>\r\n                                </IconContext.Provider>\r\n                                <Typography variant=\"h6\" color=\"inherit\">\r\n                                    Wheater App\r\n                                </Typography>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid item xs={12} sm={11} md={10} lg={8}>\r\n                {children}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nAppFrame.propTypes = {\r\n    children: PropTypes.node\r\n}\r\n\r\nexport default AppFrame\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport CityList from './../components/CityList'\r\nimport AppFrame from '../components/AppFrame/AppFrame'\r\nimport { Paper } from '@material-ui/core'\r\n\r\nconst cities = [\r\n    { city: \"Buenos Aires\", country: \"Argentina\" },\r\n    { city: \"Bogota\", country: \"Colombia\" },\r\n    { city: \"Madrid\", country: \"España\" },\r\n    { city: \"Ciudad de Mexico\", country: \"Mexico\" }\r\n]\r\n\r\nconst MainPage = () => {\r\n    const history = useHistory()\r\n\r\n    const onClickHandler = () => {\r\n        history.push(\"/city\")\r\n    }\r\n\r\n    return (\r\n        <AppFrame>\r\n            {/* <Paper elevation={3}> */}\r\n                <CityList cities={cities} onClickCity={onClickHandler} />\r\n            {/* </Paper> */}\r\n        </AppFrame>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst WeatherDetails = ({ humidity, wind}) => {\r\n    return (\r\n        <>\r\n            <Typography>Humedad: {humidity}%</Typography>\r\n            <Typography>Viento: {wind} km/h</Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nWeatherDetails.propTypes = {\r\n    humidity: PropTypes.number.isRequired,\r\n    wind: PropTypes.number.isRequired\r\n}\r\n\r\nexport default WeatherDetails\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Typography, Grid } from '@material-ui/core'\r\nimport { IconContext } from 'react-icons/lib'\r\nimport IconState, { validValues } from './../IconState'\r\n\r\nconst ForecastItem = ({ weekDay, hour, state, temperature }) => {\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography>{weekDay}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>{hour}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconContext.Provider value={{ size: '5em' }}>\r\n                        <IconState state={state} />\r\n                    </IconContext.Provider>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>{temperature}º</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nForecastItem.propTypes = {\r\n    weekDay: PropTypes.string.isRequired,\r\n    hour: PropTypes.number.isRequired,\r\n    state: PropTypes.oneOf(validValues).isRequired,\r\n    temperature: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ForecastItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid } from '@material-ui/core'\r\nimport ForecastItem from './../ForecastItem'\r\nimport { validValues } from './../IconState'\r\n\r\nconst renderForecastItem = forecast => {\r\n    const { weekDay, hour, state, temperature } = forecast\r\n    return (\r\n        <Grid item key={`${weekDay}${hour}`} data-testid=\"forecast-item-container\">\r\n            <ForecastItem weekDay={weekDay} hour={hour} state={state} temperature={temperature}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Forecast = ({ forecastItemList }) => {\r\n    return (\r\n        <Grid container justifyContent=\"space-around\" alignItems=\"center\">\r\n            {\r\n                forecastItemList.map(forecast => renderForecastItem(forecast))\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nForecast.propTypes = {\r\n    forecastItemList: PropTypes.shape({\r\n        weekDay: PropTypes.string.isRequired,\r\n        hour: PropTypes.number.isRequired,\r\n        state: PropTypes.oneOf(validValues).isRequired,\r\n        temperature: PropTypes.number.isRequired\r\n    }).isRequired,\r\n}\r\n\r\nexport default Forecast\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts'\r\n\r\nconst ForecastChart = ({ data }) => {\r\n    return (\r\n        <ResponsiveContainer height={250} width={\"95%\"}>\r\n            <LineChart margin={{top: 20, bottom: 20, left: 5, right: 5}} data={data}>\r\n                <XAxis dataKey=\"dayHour\"></XAxis>\r\n                <YAxis></YAxis>\r\n                <CartesianGrid></CartesianGrid>\r\n                <Tooltip></Tooltip>\r\n                <Legend></Legend>\r\n                <Line type=\"monotone\" dataKey=\"max\" stroke=\"#FF0000\"></Line>\r\n                <Line type=\"monotone\" dataKey=\"min\" stroke=\"#0000FF\"></Line>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nForecastChart.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            dayHour: PropTypes.string.isRequired,\r\n            min: PropTypes.number.isRequired,\r\n            max: PropTypes.number.isRequired\r\n        }),\r\n    ).isRequired\r\n}\r\n\r\nexport default ForecastChart\r\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport AppFrame from '../components/AppFrame/AppFrame'\r\nimport CityInfo from '../components/CityInfo'\r\nimport Weather from '../components/Weather'\r\nimport WeatherDetails from '../components/WeatherDetails'\r\nimport Forecast from '../components/Forecast'\r\nimport ForecastChart from '../components/ForecastChart'\r\n\r\nconst dataExample = [\r\n    {\r\n        \"dayHour\": \"Jue 18\",\r\n        \"min\": 14,\r\n        \"max\": 22,\r\n    },\r\n    {\r\n        \"dayHour\": \"Vie 06\",\r\n        \"min\": 18,\r\n        \"max\": 27,\r\n    },\r\n    {\r\n        \"dayHour\": \"Vie 12\",\r\n        \"min\": 18,\r\n        \"max\": 28,\r\n    },\r\n    {\r\n        \"dayHour\": \"Vie 18\",\r\n        \"min\": 18,\r\n        \"max\": 25,\r\n    },\r\n    {\r\n        \"dayHour\": \"Sab 06\",\r\n        \"min\": 15,\r\n        \"max\": 22,\r\n    },\r\n    {\r\n        \"dayHour\": \"Sab 12\",\r\n        \"min\": 12,\r\n        \"max\": 19,\r\n    }\r\n]\r\n\r\nconst forecastItemListExample = [\r\n    { hour: 18, state: \"sunny\", temperature: 17, weekDay: \"Jueves\" },\r\n    { hour: 17, state: \"cloud\", temperature: 18, weekDay: \"Viernes\" },\r\n    { hour: 13, state: \"fog\", temperature: 16, weekDay: \"Sabado\" },\r\n    { hour: 12, state: \"cloudy\", temperature: 14, weekDay: \"Domingo\" },\r\n    { hour: 14, state: \"rain\", temperature: 13, weekDay: \"Lunes\" },\r\n]\r\n\r\nconst CityPage = () => {\r\n\r\n    const city = \"Buenos Aires\"\r\n    const country = \"Argentina\"\r\n    const state = \"sunny\"\r\n    const temperature = 20\r\n    const humidity = 80\r\n    const wind = 5\r\n    const data = dataExample\r\n    const forecastItemList = forecastItemListExample\r\n\r\n    return (\r\n        <AppFrame>\r\n            <Grid container justifyContent=\"space-around\" direction=\"column\" spacing={2}>\r\n                <Grid item container justifyContent=\"center\" alignItems=\"flex-end\" xs={12}>\r\n                    <CityInfo city={city} country={country} />\r\n                </Grid>\r\n                <Grid container item xs={12} justifyContent=\"center\">\r\n                    <Weather state={state} temperature={temperature} />\r\n                    <WeatherDetails humidity={humidity} wind={wind} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <ForecastChart data={data} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Forecast forecastItemList={forecastItemList} />\r\n                </Grid>\r\n            </Grid>\r\n        </AppFrame>\r\n    )\r\n}\r\n\r\n\r\nexport default CityPage\r\n","import React from 'react'\r\nimport WelcomeScreen from '../components/WelcomeScreen'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { Grid, Typography, Link } from '@material-ui/core'\r\nimport { IconContext } from 'react-icons'\r\nimport { WiRain } from 'react-icons/wi'\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" className=\"full\">\r\n        <Grid item container justifyContent=\"center\" alignItems=\"center\" className=\"highlight\">\r\n            <Grid item container xs={12} justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item>\r\n                            <IconContext.Provider value={{size: \"6em\"}}>\r\n                                <WiRain />\r\n                            </IconContext.Provider>\r\n                        </Grid>\r\n                        <Grid item container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n                            <Typography variant=\"h4\" color=\"inherit\">\r\n                                404 <br /> La pagina no existe\r\n                            </Typography>\r\n                            <Link color=\"inherit\" aria-label=\"menu\" component={RouterLink} to=\"/main\">\r\n                                Volver al inicio\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport WelcomePage from './pages/WelcomePage'\r\nimport MainPage from './pages/MainPage'\r\nimport CityPage from './pages/CityPage'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <WelcomePage />\r\n                </Route>\r\n                <Route path=\"/main\">\r\n                    <MainPage />\r\n                </Route>\r\n                <Route path=\"/city\">\r\n                    <CityPage />\r\n                </Route>\r\n                <Route>\r\n                    <NotFoundPage />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}